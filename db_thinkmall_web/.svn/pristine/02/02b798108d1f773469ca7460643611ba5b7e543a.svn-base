package com.thinkive.project.interceptor;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;

import com.thinkive.base.config.Configuration;
import com.thinkive.base.util.SessionHelper;
import com.thinkive.base.util.StringHelper;
import com.thinkive.base.util.security.AES;
import com.thinkive.gateway.v2.result.Result;
import com.thinkive.project.WebConstants;
import com.thinkive.project.util.IPHelper;
import com.thinkive.tbservice.interceptor.ActionInvocation;
import com.thinkive.tbservice.interceptor.Interceptor;

/**
 * 描述: 权限拦截器
 * 版权: Copyright (c) 2012 
 * 公司: 思迪信息
 * 作者: 李炜
 * 版本: 1.0 
 * 创建日期: Oct 9, 2013 
 * 创建时间: 2:02:46 PM
 */
public class SecurityInterceptor implements Interceptor
{
	private static final long serialVersionUID = 4840866570444047069L;

	private static Logger logger = Logger.getLogger(SecurityInterceptor.class);
	
	private final static String verifyKey = Configuration.getString("system.verifyKey");
	
	public Result intercept(ActionInvocation invocation) throws Exception
	{
		logger.info("进入权限拦截器");
		if (!isLogin(invocation.getRequest()))
		{
			Result resultVo = new Result();
			resultVo.setErr_no(-999);
			resultVo.setErr_info("您还未登录");
			return resultVo;
		}
		return invocation.invoke();
	}
	
	/**
	 * 判断用户是否已经登录
	 *
	 * @param actionInvocation
	 * @return
	 */
	private boolean isLogin(HttpServletRequest request)
	{
		String userId = SessionHelper.getString(WebConstants.SESSION_USER_ID, request.getSession());
		String ip = IPHelper.getIpAddr(request);
		String token = SessionHelper.getString(WebConstants.SESSION_USER_TOKEN, request.getSession()) ; //得到session中
		if(StringHelper.isNotEmpty(token) && StringHelper.isNotEmpty(userId)){ //判断session中是否存在token
			AES aes = new AES(verifyKey);
			String tokenStr = aes.decrypt(token, "UTF-8"); 
			String userArr[] = StringHelper.split(tokenStr, "|");//解密session得到用户信息 1、user_id 2、 资金账号 3、营业部  4、ip 5、mac地址
			if(userArr!=null && userArr.length==4){
				if(StringHelper.isNotEmpty(userArr[3]) && userArr[3].equalsIgnoreCase(ip)){
					return true ;
				}
			}
		}
		return false;
	}
}
