define(function(require, exports, module) {
	var _pageId = "#finan_fund_znxj "; // 页面id
	var appUtils = require("appUtils"); // 核心工具类
	var service = require("mobileService"); // 业务层接口，请求数据
	var layerUtils = require("layerUtils"); // 弹出层工具类
	var global = require("gconfig").global; // 全局配置对象
	var constants = require("constants");// 常量类
	var common = require("common"); // 公共类
	var putils = require("putils"); //
	var publics = require("publics");
	
	var pageGlobal = {
			"isFileState" : "0", // 广告是否有效
			"enumData" : [] // 用户缓存数据字典信息item_name,item_value
		}
	
	
	/*
	 * 初始化
	 */
	function init() {
		// 底部导航
		common.footerTab(_pageId);
		
		//查询收益率最高的产品
		queryRoehignProduct();
	}
	
	function queryRoehignProduct(){
		var param = {
				"is_rate" : 1, // 按收益率排行
				"page" : 1, 
				"numPerPage" : 8
			};
		service.queryAllProduct(param,function(resultVo){
			if(0==resultVo.error_no){
				var results = resultVo.results[0].data;
				var sylgEle = $(_pageId+"#sylg").empty();
			    if(results.length > 0){
					for(var i = 0; i < 1; i++){
						var item = results[i];
						var productName = item.product_name; // 产品名称
						var productSubType = item.product_sub_type; // 产品类型
						var productId = item.product_id; // 产品编号
						var productCode = item.product_code; // 产品代码
						var yieldrate1m = item.yieldrate1m || "0"; // 近一个月收益率
						var yield1 = parseFloat(yieldrate1m).toFixed(2);
						var currentPrice = item.current_price || "0"; // 单位净值
						var dwjz = parseFloat(currentPrice).toFixed(4);
						productName = putils.delProSpecialStr(productName);
						var qgjg = item.per_buy_limit;
						var riskLevel = item.risk_level;// 风险等级
						switch (riskLevel) {
						
						case "1":
							riskLevel=putils.riskLevel(riskLevel);
							break;
							
						case "2":
							riskLevel=putils.riskLevel(riskLevel);
							break;
							
						case "3":
							riskLevel=putils.riskLevel(riskLevel);
							break;
							
						case "4":
							riskLevel=putils.riskLevel(riskLevel);
							break;
							
						case "5":
							riskLevel=putils.riskLevel(riskLevel);
							break;
							
						case "6":
							riskLevel=putils.riskLevel(riskLevel);
							break;

						default:
							break;
						}
						
					var  itemHtml='<div class="plin" productCode="' + productCode + '" productId="' + productId + '" productSubType="' + productSubType + '">'+
							'<div class="plin_r">'+
								'<p class="sp01">'+yield1+'<span>%</span></p>'+
								'<p class="sp02">近一个月收益率</p>'+
							'</div>'+
							'<div class="plin_l">'+
								'<p class="sp01">'+productName+'</p>'+
								'<p class="sp02">单位净值：'+dwjz+'元</p>'+
								'<p class="sp03"><span class="san01">'+qgjg+'元起购</span><span class="san02">'+riskLevel+'风险</span></p>'+
							'</div>'+
					   '</div>';
					
						sylgEle.append(itemHtml);
					}
					// 绑定详情事件
					appUtils.bindEvent(_pageId + ".plin", function(){
						var curEle = $(this);
						productDetail(curEle.attr("productId"), curEle.attr("productSubType"), curEle.attr("productCode"));
					});
			    }
			}else{
				layerUtils.iAlert("查询优选基金列表失败:"+resultVo.error_info,-1);
			}
		})
	}
	
	$('.sound_box').slidy({
        maxval:1000,
        minval:10,
        interval:1,
        defaultValue:100
    });

    
	/*
	 * 产品详情
	 */
	function productDetail(productId, subType, productCode) {
		if (productCode == global.product_code) {
			// 现金管家
			appUtils.pageInit("finan/index", "account/cashbutler/detail", {});
		} else {
			// 非现金管家
			if(subType == constants.product_sub_type.FUND){
				// 基金产品详情
				appUtils.pageInit("finan/index", "finan/detail", {"product_id" : productId});	
			}else if(subType == constants.product_sub_type.FINANCIAL){
				// 理财产品详情
				appUtils.pageInit("finan/index", "finan/finanDetail", {"product_id" : productId});	
			}
		}
		
	}
	
	
	/*
	 * 绑定事件
	 */
	function bindPageEvent() {
		// 登录
		appUtils.bindEvent(_pageId + ".per_btn", function() {
			appUtils.pageInit("main", "account/userCenter", {});
			return false;
		});
		
	};
	

	/*
	 * 页面销毁
	 */
	function destroy() {};

	var main = {
		"init" : init,
		"bindPageEvent" : bindPageEvent,
		"destroy" : destroy
	};
	
	// 暴露对外的接口
	module.exports = main;
});